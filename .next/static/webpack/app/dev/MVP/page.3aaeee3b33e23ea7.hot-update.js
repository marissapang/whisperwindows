"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dev/MVP/page",{

/***/ "(app-pages-browser)/./app/schemas/createBlankOrder.ts":
/*!*****************************************!*\
  !*** ./app/schemas/createBlankOrder.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBlankOrder: () => (/* binding */ createBlankOrder),\n/* harmony export */   orderMeta: () => (/* binding */ orderMeta)\n/* harmony export */ });\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/./node_modules/nanoid/index.browser.js\");\n\n// helper fun functions\nfunction generateOrderId() {\n    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 6;\n    const alphabet = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';\n    const order_id = (0,nanoid__WEBPACK_IMPORTED_MODULE_0__.customAlphabet)(alphabet, 6)();\n    console.log(\"inside genOrderID: order id is \".concat(order_id));\n    return order_id;\n}\n//-----------------------------------------\n// address functions\n//-----------------------------------------\nfunction generateEmptyAddress() {\n    return {\n        Address_Line_1: '',\n        Address_Line_2: '',\n        City: '',\n        State: '',\n        Zip_Code: ''\n    };\n}\nconst addressMeta = {\n    Address_Line_1: {\n        'type': 'string',\n        'label': \"Address Line 1\",\n        'omit': false\n    },\n    Address_Line_2: {\n        'type': 'string',\n        'label': \"Address Line 2\",\n        'omit': false\n    },\n    City: {\n        'type': 'string',\n        'label': \"City\",\n        'omit': false\n    },\n    State: {\n        'type': 'string',\n        'label': \"State\",\n        'omit': false\n    },\n    Zip_Code: {\n        'type': 'string',\n        'label': \"Zip Code\",\n        'omit': false\n    }\n};\n// //-----------------------------------------\n// // extension functions\n// //-----------------------------------------\n// function generateEmptyExtension(){\n// \treturn {\n// \t  Extension: true,\n// \t  Depth: 0,\n// \t  Type: 'interior',\n// \t  Support_Notes: '',\n// \t  General_Notes: ''\n// \t}\n// }\n// const extensionMeta = {\n//   Extension: {'type':'bool', 'label': \"Frame Extension?\", 'omit':false},\n//   Depth: {'type':'number_inches', 'label': \"Extension Depth\", 'omit':false},\n//   Type: {'type':'string', 'label': \"Extension Type\", 'omit':false},\n//   Support_Notes: {'type':'longtext', 'label': \"Frame Support Notes\", 'omit':true},\n//   General_Notes: {'type':'longtext', 'label': \"General Notes\", 'omit':false},\n// }\n// //-----------------------------------------\n// // window functions\n// //-----------------------------------------\n// export const createBlankWindow = () => ({\n// \tRoom_Name:'',\n// \tWindow_Name:'',\n// \tWindow_Material_Notes:'',\n// \tWindow_Depth: 0,\n// \tWindow_Depth_Notes:'',\n// \tExtension: generateEmptyExtension(),\n// \tProducts:[]\n// })\n// export const windowMeta = {\n// \tRoom_Name:{'type':'string', 'label': \"Room Name\", 'omit':false},\n// \tWindow_Name:{'type':'string', 'label': \"Window Name\", 'omit':false},\n// \tWindow_Material_Notes:{'type':'longtext', 'label': \"Window Material Notes\", 'omit':false},\n// \tWindow_Depth: {'type':'number_inches', 'label': \"Current Window Frame Depth\", 'omit':false},\n// \tWindow_Depth_Notes:{'type':'longtext', 'label': \"Window Material Notes\", 'omit':false},\n// \tExtension: generateEmptyExtension(),\n// \tProducts:{product_id:{\"type\":'string','label':'product id', 'omit':false}}\n// }\n//-----------------------------------------\n// order functions\n//-----------------------------------------\nconst styles = {\n    Group_Header_L1: \"font-semibold text-xl text-lake-700\"\n};\nconst permissions = {\n    all: [\n        'Client',\n        'Sales',\n        'Manufacturer',\n        'Installer'\n    ],\n    client_sales: [\n        'Client',\n        'Sales'\n    ],\n    mfg_only: [\n        'Manufacturer'\n    ],\n    excl_mfg: [\n        'Client',\n        'Sales',\n        'Installer'\n    ],\n    none: []\n};\nconst orderStages = {\n    all: [\n        'created',\n        'submitted',\n        'sales_confirmed',\n        'client_confirmed',\n        'mfg_locked',\n        'install_locked'\n    ],\n    post_sales_review: [\n        'sales_confirmed',\n        'client_confirmed',\n        'mfg_locked',\n        'install_locked'\n    ],\n    none: []\n};\nconst createBlankOrder = ()=>({\n        Order_Id: generateOrderId(),\n        Client_Name: \"\",\n        Order_Created_Date: new Date().toISOString().split('T')[0],\n        Order_Submitted_date: null,\n        Order_Status: \"created\",\n        Delivery_Address: generateEmptyAddress(),\n        Delivery_Contact_Name: \"\",\n        Window_Width: null\n    });\nconst orderMeta = {\n    Order_Info: {\n        type: \"group\",\n        label: \"ORDER INFO\",\n        style: styles.Group_Header_L1,\n        fields_permissions: {\n            'visibleTo': permissions.all,\n            'editableBy': permissions.none,\n            'readOnlyStages': orderStages.all\n        },\n        fields: {\n            Order_Id: {\n                'type': 'string',\n                'label': \"Order ID\"\n            },\n            Client_Name: {\n                'type': 'string',\n                'label': 'Client Name',\n                fields_permissions: {\n                    'visibleTo': permissions.all,\n                    'editableBy': permissions.all\n                },\n                'readOnlyStages': orderStages.post_sales_review\n            },\n            Order_Created_Date: {\n                'type': 'string',\n                'label': \"Order Created\"\n            },\n            Order_Submitted_Date: {\n                'type': 'string',\n                'label': \"Order Submitted\"\n            },\n            Order_Status: {\n                'type': 'string',\n                'label': 'Order Status'\n            }\n        }\n    },\n    Delivery_Info: {\n        type: \"group\",\n        label: \"DELIVERY INFO\",\n        style: styles.Group_Header_L1,\n        fields_permissions: {\n            'visibleTo': permissions.excl_mfg,\n            'editableBy': permissions.client_sales,\n            'readOnlyStages': orderStages.post_sales_review\n        },\n        fields: {\n            Delivery_Address: {\n                'type': 'nested_object',\n                'label': 'Delivery Address',\n                'fields': addressMeta\n            },\n            Delivery_Contact_Name: {\n                'type': 'string',\n                'label': 'Delivery Contact'\n            }\n        }\n    },\n    Payment_Info: {\n        type: \"group\",\n        label: \"PAYMENT INFO\",\n        style: styles.Group_Header_L1,\n        fields_permissions: {\n            'visibleTo': permissions.client_sales,\n            'editableBy': permissions.sales,\n            'readOnlyStages': orderStages.none\n        },\n        fields: {\n            total_invoice: {\n                'type': 'number_dollars',\n                'label': 'Total Invoice'\n            },\n            deposit_paid: {\n                'type': 'bool',\n                'label': 'Deposit Received',\n                'visibleTo': permissions.all\n            }\n        }\n    },\n    Order_Summary: {\n        type: \"group\",\n        label: \"ORDER SUMMARY\",\n        style: styles.Group_Header_L1,\n        fields_permissions: {\n            'visibleTo': permissions.all,\n            'editableBy': permissions.all,\n            'readOnlyStages': orderStages.post_sales_review\n        },\n        fields: {\n            Window_Width: {\n                'type': 'number_inches',\n                'label': 'Window Width'\n            }\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/schemas/createBlankOrder.ts\n"));

/***/ })

});